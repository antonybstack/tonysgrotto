{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\coding\\\\tonysgrotto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\coding\\\\tonysgrotto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\coding\\\\tonysgrotto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,createContext,useEffect}from\"react\";import axios from\"axios\";export var TicketContext=createContext();export var TicketProvider=function TicketProvider(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tickets=_useState2[0],setTickets=_useState2[1];useEffect(function(){if(tickets.length)return;// so, we call just once\ngetTickets();},[]);var getTickets=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"http://localhost:8080/tickets/\");case 2:response=_context.sent;setTickets(response.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getTickets(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(TicketContext.Provider,{value:[tickets,setTickets]},props.children);};","map":{"version":3,"sources":["C:/coding/tonysgrotto/src/contexts/TicketContext.js"],"names":["React","useState","createContext","useEffect","axios","TicketContext","TicketProvider","props","tickets","setTickets","length","getTickets","get","response","data","children"],"mappings":"sbAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,aAA1B,CAAyCC,SAAzC,KAA0D,OAA1D,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAGH,aAAa,EAAnC,CAEP,MAAO,IAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,eACTN,QAAQ,CAAC,EAAD,CADC,wCAChCO,OADgC,eACvBC,UADuB,eAEvCN,SAAS,CAAC,UAAM,CACd,GAAIK,OAAO,CAACE,MAAZ,CAAoB,OAAQ;AAC5BC,UAAU,GACX,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAMA,CAAAA,UAAU,0FAAG,sKACMP,CAAAA,KAAK,CAACQ,GAAN,CAAU,gCAAV,CADN,QACXC,QADW,eAEjBJ,UAAU,CAACI,QAAQ,CAACC,IAAV,CAAV,CAFiB,sDAAH,kBAAVH,CAAAA,UAAU,0CAAhB,CAIA,mBAAO,oBAAC,aAAD,CAAe,QAAf,EAAwB,KAAK,CAAE,CAACH,OAAD,CAAUC,UAAV,CAA/B,EAAuDF,KAAK,CAACQ,QAA7D,CAAP,CACD,CAZM","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const TicketContext = createContext();\r\n\r\nexport const TicketProvider = (props) => {\r\n  const [tickets, setTickets] = useState([]);\r\n  useEffect(() => {\r\n    if (tickets.length) return; // so, we call just once\r\n    getTickets();\r\n  }, []);\r\n\r\n  const getTickets = async () => {\r\n    const response = await axios.get(\"http://localhost:8080/tickets/\");\r\n    setTickets(response.data);\r\n  };\r\n  return <TicketContext.Provider value={[tickets, setTickets]}>{props.children}</TicketContext.Provider>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}