{"ast":null,"code":"import _slicedToArray from\"C:\\\\coding\\\\tonysgrotto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from\"react\";import{useContext}from\"react\";import Ticket from\"../Ticket\";import{TicketContext}from\"../contexts/TicketContext\";var TicketDisplay=function TicketDisplay(props){var _useContext=useContext(TicketContext),_useContext2=_slicedToArray(_useContext,2),tickets=_useContext2[0],setTickets=_useContext2[1];console.log(\"TicketDisplay mounted\");return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"User: Tony\"),/*#__PURE__*/React.createElement(\"p\",null,\"Number of Tickets: \",tickets.length)),/*#__PURE__*/React.createElement(\"div\",{className:\"display\"},/*#__PURE__*/React.createElement(\"div\",{className:\"backlog\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Backlog\"),/*#__PURE__*/React.createElement(\"th\",{className:\"nameheader\"},\"NAME\"),/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"tbody\",null,tickets.map(function(currentTicket,i){return currentTicket.ticket_status==\"backlog\"&&/*#__PURE__*/React.createElement(Ticket,{ticket:currentTicket,key:i});})))),/*#__PURE__*/React.createElement(\"div\",{className:\"sprint\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Sprint\"),/*#__PURE__*/React.createElement(\"th\",{className:\"nameheader\"},\"NAME\"),/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"tbody\",null,tickets.map(function(currentTicket,i){return currentTicket.ticket_status==\"sprint\"&&/*#__PURE__*/React.createElement(Ticket,{ticket:currentTicket,key:i});})))),/*#__PURE__*/React.createElement(\"div\",{className:\"progress\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Progress\"),/*#__PURE__*/React.createElement(\"th\",{className:\"nameheader\"},\"NAME\"),/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"tbody\",null,tickets.map(function(currentTicket,i){return currentTicket.ticket_status==\"progress\"&&/*#__PURE__*/React.createElement(Ticket,{ticket:currentTicket,key:i});})))),/*#__PURE__*/React.createElement(\"div\",{className:\"done\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Done\"),/*#__PURE__*/React.createElement(\"th\",{className:\"nameheader\"},\"NAME\"),/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"tbody\",null,tickets.map(function(currentTicket,i){return currentTicket.ticket_status==\"done\"&&/*#__PURE__*/React.createElement(Ticket,{ticket:currentTicket,key:i});}))))));// <div className=\"display\">\n//   <div className=\"backlog\">\n//     <h1>Backlog</h1>\n//     {tickets.map((ticket, index) => (\n//       <div key={ticket.id}>\n//         {ticket.status === \"backlog\" && (\n//           <div className=\"ticketBlock\">\n//             <button\n//               onClick={(e) => {\n//                 const newTickets = tickets.slice();\n//                 newTickets.splice(index, 1, {\n//                   ...ticket,\n//                   status: \"sprint\",\n//                 });\n//                 setTickets(newTickets);\n//               }}\n//             >\n//               push\n//             </button>\n//             &nbsp;\n//             <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\n//           </div>\n//         )}\n//       </div>\n//     ))}\n//   </div>\n//   <div className=\"sprint\">\n//     <h1>Sprint</h1>\n//     <div>\n//       {tickets.map((ticket, index) => (\n//         <div key={ticket.id}>\n//           {ticket.status === \"sprint\" && (\n//             <div className=\"ticketBlock\">\n//               <button\n//                 onClick={(e) => {\n//                   const newTickets = tickets.slice();\n//                   newTickets.splice(index, 1, {\n//                     ...ticket,\n//                     status: \"progress\",\n//                   });\n//                   setTickets(newTickets);\n//                 }}\n//               >\n//                 push\n//               </button>\n//               &nbsp;\n//               <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\n//             </div>\n//           )}\n//         </div>\n//       ))}\n//     </div>\n//   </div>\n//   <div className=\"progress\">\n//     <h1>Progress</h1>\n//     <div>\n//       {tickets.map((ticket, index) => (\n//         <div key={ticket.id}>\n//           {ticket.status === \"progress\" && (\n//             <div className=\"ticketBlock\">\n//               <button\n//                 onClick={(e) => {\n//                   const newTickets = tickets.slice();\n//                   newTickets.splice(index, 1, {\n//                     ...ticket,\n//                     status: \"done\",\n//                   });\n//                   setTickets(newTickets);\n//                 }}\n//               >\n//                 push\n//               </button>\n//               &nbsp;\n//               <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\n//             </div>\n//           )}\n//         </div>\n//       ))}\n//     </div>\n//   </div>\n//   <div className=\"done\">\n//     <h1>Done</h1>\n//     <div>\n//       {tickets.map((ticket, index) => (\n//         <div key={ticket.id}>\n//           {ticket.status === \"done\" && (\n//             <div className=\"ticketBlock\">\n//               <button\n//                 onClick={(e) => {\n//                   const newTickets = tickets.slice();\n//                   newTickets.splice(index, 1, {\n//                     ...ticket,\n//                     status: \"backlog\",\n//                   });\n//                   setTickets(newTickets);\n//                 }}\n//               >\n//                 push\n//               </button>\n//               &nbsp;\n//               <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\n//             </div>\n//           )}\n//         </div>\n//       ))}\n//     </div>\n//   </div>\n// </div>\n};export default TicketDisplay;","map":{"version":3,"sources":["C:/coding/tonysgrotto/src/displays/TicketDisplay.js"],"names":["React","useContext","Ticket","TicketContext","TicketDisplay","props","tickets","setTickets","console","log","length","map","currentTicket","i","ticket_status"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,OAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,OAASC,aAAT,KAA8B,2BAA9B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,iBACDJ,UAAU,CAACE,aAAD,CADT,4CACxBG,OADwB,iBACfC,UADe,iBAE/BC,OAAO,CAACC,GAAR,CAAY,uBAAZ,EACA,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACE,4CACE,0CADF,cAEE,mDAAuBH,OAAO,CAACI,MAA/B,CAFF,CADF,cAKE,2BAAK,SAAS,CAAC,SAAf,eACE,2BAAK,SAAS,CAAC,SAAf,eACE,wCADF,cAEE,0BAAI,SAAS,CAAC,YAAd,SAFF,cAGE,8CAME,iCAAQJ,OAAO,CAACK,GAAR,CAAY,SAACC,aAAD,CAAgBC,CAAhB,QAAsBD,CAAAA,aAAa,CAACE,aAAd,EAA+B,SAA/B,eAA4C,oBAAC,MAAD,EAAQ,MAAM,CAAEF,aAAhB,CAA+B,GAAG,CAAEC,CAApC,EAAlE,EAAZ,CAAR,CANF,CAHF,CADF,cAaE,2BAAK,SAAS,CAAC,QAAf,eACE,uCADF,cAEE,0BAAI,SAAS,CAAC,YAAd,SAFF,cAGE,8CACE,iCAAQP,OAAO,CAACK,GAAR,CAAY,SAACC,aAAD,CAAgBC,CAAhB,QAAsBD,CAAAA,aAAa,CAACE,aAAd,EAA+B,QAA/B,eAA2C,oBAAC,MAAD,EAAQ,MAAM,CAAEF,aAAhB,CAA+B,GAAG,CAAEC,CAApC,EAAjE,EAAZ,CAAR,CADF,CAHF,CAbF,cAoBE,2BAAK,SAAS,CAAC,UAAf,eACE,yCADF,cAEE,0BAAI,SAAS,CAAC,YAAd,SAFF,cAGE,8CACE,iCAAQP,OAAO,CAACK,GAAR,CAAY,SAACC,aAAD,CAAgBC,CAAhB,QAAsBD,CAAAA,aAAa,CAACE,aAAd,EAA+B,UAA/B,eAA6C,oBAAC,MAAD,EAAQ,MAAM,CAAEF,aAAhB,CAA+B,GAAG,CAAEC,CAApC,EAAnE,EAAZ,CAAR,CADF,CAHF,CApBF,cA2BE,2BAAK,SAAS,CAAC,MAAf,eACE,qCADF,cAEE,0BAAI,SAAS,CAAC,YAAd,SAFF,cAGE,8CACE,iCAAQP,OAAO,CAACK,GAAR,CAAY,SAACC,aAAD,CAAgBC,CAAhB,QAAsBD,CAAAA,aAAa,CAACE,aAAd,EAA+B,MAA/B,eAAyC,oBAAC,MAAD,EAAQ,MAAM,CAAEF,aAAhB,CAA+B,GAAG,CAAEC,CAApC,EAA/D,EAAZ,CAAR,CADF,CAHF,CA3BF,CALF,CADF,CA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA3JD,CA6JA,cAAeT,CAAAA,aAAf","sourcesContent":["import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport Ticket from \"../Ticket\";\r\nimport { TicketContext } from \"../contexts/TicketContext\";\r\n\r\nconst TicketDisplay = (props) => {\r\n  const [tickets, setTickets] = useContext(TicketContext);\r\n  console.log(\"TicketDisplay mounted\");\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <p>User: Tony</p>\r\n        <p>Number of Tickets: {tickets.length}</p>\r\n      </div>\r\n      <div className=\"display\">\r\n        <div className=\"backlog\">\r\n          <h1>Backlog</h1>\r\n          <th className=\"nameheader\">NAME</th>\r\n          <table>\r\n            {/* <tbody>\r\n              {tickets.map((currentTicket, i) => (\r\n                <Ticket ticket={currentTicket} key={i} />\r\n              ))}\r\n            </tbody> */}\r\n            <tbody>{tickets.map((currentTicket, i) => currentTicket.ticket_status == \"backlog\" && <Ticket ticket={currentTicket} key={i} />)}</tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"sprint\">\r\n          <h1>Sprint</h1>\r\n          <th className=\"nameheader\">NAME</th>\r\n          <table>\r\n            <tbody>{tickets.map((currentTicket, i) => currentTicket.ticket_status == \"sprint\" && <Ticket ticket={currentTicket} key={i} />)}</tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"progress\">\r\n          <h1>Progress</h1>\r\n          <th className=\"nameheader\">NAME</th>\r\n          <table>\r\n            <tbody>{tickets.map((currentTicket, i) => currentTicket.ticket_status == \"progress\" && <Ticket ticket={currentTicket} key={i} />)}</tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"done\">\r\n          <h1>Done</h1>\r\n          <th className=\"nameheader\">NAME</th>\r\n          <table>\r\n            <tbody>{tickets.map((currentTicket, i) => currentTicket.ticket_status == \"done\" && <Ticket ticket={currentTicket} key={i} />)}</tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n  // <div className=\"display\">\r\n  //   <div className=\"backlog\">\r\n  //     <h1>Backlog</h1>\r\n  //     {tickets.map((ticket, index) => (\r\n  //       <div key={ticket.id}>\r\n  //         {ticket.status === \"backlog\" && (\r\n  //           <div className=\"ticketBlock\">\r\n  //             <button\r\n  //               onClick={(e) => {\r\n  //                 const newTickets = tickets.slice();\r\n  //                 newTickets.splice(index, 1, {\r\n  //                   ...ticket,\r\n  //                   status: \"sprint\",\r\n  //                 });\r\n  //                 setTickets(newTickets);\r\n  //               }}\r\n  //             >\r\n  //               push\r\n  //             </button>\r\n  //             &nbsp;\r\n  //             <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\r\n  //           </div>\r\n  //         )}\r\n  //       </div>\r\n  //     ))}\r\n  //   </div>\r\n\r\n  //   <div className=\"sprint\">\r\n  //     <h1>Sprint</h1>\r\n  //     <div>\r\n  //       {tickets.map((ticket, index) => (\r\n  //         <div key={ticket.id}>\r\n  //           {ticket.status === \"sprint\" && (\r\n  //             <div className=\"ticketBlock\">\r\n  //               <button\r\n  //                 onClick={(e) => {\r\n  //                   const newTickets = tickets.slice();\r\n  //                   newTickets.splice(index, 1, {\r\n  //                     ...ticket,\r\n  //                     status: \"progress\",\r\n  //                   });\r\n  //                   setTickets(newTickets);\r\n  //                 }}\r\n  //               >\r\n  //                 push\r\n  //               </button>\r\n  //               &nbsp;\r\n  //               <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\r\n  //             </div>\r\n  //           )}\r\n  //         </div>\r\n  //       ))}\r\n  //     </div>\r\n  //   </div>\r\n  //   <div className=\"progress\">\r\n  //     <h1>Progress</h1>\r\n  //     <div>\r\n  //       {tickets.map((ticket, index) => (\r\n  //         <div key={ticket.id}>\r\n  //           {ticket.status === \"progress\" && (\r\n  //             <div className=\"ticketBlock\">\r\n  //               <button\r\n  //                 onClick={(e) => {\r\n  //                   const newTickets = tickets.slice();\r\n  //                   newTickets.splice(index, 1, {\r\n  //                     ...ticket,\r\n  //                     status: \"done\",\r\n  //                   });\r\n  //                   setTickets(newTickets);\r\n  //                 }}\r\n  //               >\r\n  //                 push\r\n  //               </button>\r\n  //               &nbsp;\r\n  //               <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\r\n  //             </div>\r\n  //           )}\r\n  //         </div>\r\n  //       ))}\r\n  //     </div>\r\n  //   </div>\r\n  //   <div className=\"done\">\r\n  //     <h1>Done</h1>\r\n  //     <div>\r\n  //       {tickets.map((ticket, index) => (\r\n  //         <div key={ticket.id}>\r\n  //           {ticket.status === \"done\" && (\r\n  //             <div className=\"ticketBlock\">\r\n  //               <button\r\n  //                 onClick={(e) => {\r\n  //                   const newTickets = tickets.slice();\r\n  //                   newTickets.splice(index, 1, {\r\n  //                     ...ticket,\r\n  //                     status: \"backlog\",\r\n  //                   });\r\n  //                   setTickets(newTickets);\r\n  //                 }}\r\n  //               >\r\n  //                 push\r\n  //               </button>\r\n  //               &nbsp;\r\n  //               <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\r\n  //             </div>\r\n  //           )}\r\n  //         </div>\r\n  //       ))}\r\n  //     </div>\r\n  //   </div>\r\n  // </div>\r\n};\r\n\r\nexport default TicketDisplay;\r\n"]},"metadata":{},"sourceType":"module"}