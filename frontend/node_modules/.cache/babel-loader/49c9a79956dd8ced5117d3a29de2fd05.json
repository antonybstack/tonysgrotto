{"ast":null,"code":"import _slicedToArray from\"C:\\\\coding\\\\tonysgrotto\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from\"react\";import Modal from\"react-modal\";import EditTicket from\"./addData/EditTicket\";import DeleteTicket from\"./addData/DeleteTicket\";var customStyles={overlay:{position:\"fixed\",top:0,left:0,right:0,bottom:0,backgroundColor:\"rgba(44, 47, 51, 0.75)\"},content:{paddingLeft:\"75px\",paddingRight:\"75px\",paddingBottom:\"50px\",top:\"50%\",left:\"50%\",right:\"auto\",bottom:\"auto\",marginRight:\"-50%\",transform:\"translate(-50%, -50%)\",background:\"var(--dark)\"}};// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement(document.getElementById(\"root\"));var ModalEdit=function ModalEdit(props){var subtitle;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),modalIsOpen=_React$useState2[0],setIsOpen=_React$useState2[1];// console.log(props);\nfunction openModal(){setIsOpen(true);}function afterOpenModal(){// references are now sync'd and can be accessed.\nsubtitle.style.color=\"#f00\";}function closeModal(){setIsOpen(false);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"editButton\",onClick:openModal},\"edit\"),/*#__PURE__*/React.createElement(Modal,{isOpen:modalIsOpen,onAfterOpen:afterOpenModal,onRequestClose:closeModal,style:customStyles,contentLabel:\"Example Modal\"},/*#__PURE__*/React.createElement(\"h2\",{ref:function ref(_subtitle){return subtitle=_subtitle;}},\"edit/delete\"),/*#__PURE__*/React.createElement(EditTicket,{value:props}),/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(DeleteTicket,{value:props}),/*#__PURE__*/React.createElement(\"button\",{className:\"closeModal\",onClick:closeModal},\"Close\"))));};export default ModalEdit;","map":{"version":3,"sources":["C:/coding/tonysgrotto/frontend/src/ModalEdit.js"],"names":["React","Modal","EditTicket","DeleteTicket","customStyles","overlay","position","top","left","right","bottom","backgroundColor","content","paddingLeft","paddingRight","paddingBottom","marginRight","transform","background","setAppElement","document","getElementById","ModalEdit","props","subtitle","useState","modalIsOpen","setIsOpen","openModal","afterOpenModal","style","color","closeModal","_subtitle"],"mappings":"6JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,OAAO,CAAE,CACPC,QAAQ,CAAE,OADH,CAEPC,GAAG,CAAE,CAFE,CAGPC,IAAI,CAAE,CAHC,CAIPC,KAAK,CAAE,CAJA,CAKPC,MAAM,CAAE,CALD,CAMPC,eAAe,CAAE,wBANV,CADU,CASnBC,OAAO,CAAE,CACPC,WAAW,CAAE,MADN,CAEPC,YAAY,CAAE,MAFP,CAGPC,aAAa,CAAE,MAHR,CAIPR,GAAG,CAAE,KAJE,CAKPC,IAAI,CAAE,KALC,CAMPC,KAAK,CAAE,MANA,CAOPC,MAAM,CAAE,MAPD,CAQPM,WAAW,CAAE,MARN,CASPC,SAAS,CAAE,uBATJ,CAUPC,UAAU,CAAE,aAVL,CATU,CAArB,CAuBA;AACAjB,KAAK,CAACkB,aAAN,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,EAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,GAAIC,CAAAA,QAAJ,CAD2B,oBAEMxB,KAAK,CAACyB,QAAN,CAAe,KAAf,CAFN,oDAEpBC,WAFoB,qBAEPC,SAFO,qBAG3B;AACA,QAASC,CAAAA,SAAT,EAAqB,CACnBD,SAAS,CAAC,IAAD,CAAT,CACD,CAED,QAASE,CAAAA,cAAT,EAA0B,CACxB;AACAL,QAAQ,CAACM,KAAT,CAAeC,KAAf,CAAuB,MAAvB,CACD,CAED,QAASC,CAAAA,UAAT,EAAsB,CACpBL,SAAS,CAAC,KAAD,CAAT,CACD,CAED,mBACE,4CACE,8BAAQ,SAAS,CAAC,YAAlB,CAA+B,OAAO,CAAEC,SAAxC,SADF,cAIE,oBAAC,KAAD,EAAO,MAAM,CAAEF,WAAf,CAA4B,WAAW,CAAEG,cAAzC,CAAyD,cAAc,CAAEG,UAAzE,CAAqF,KAAK,CAAE5B,YAA5F,CAA0G,YAAY,CAAC,eAAvH,eACE,0BAAI,GAAG,CAAE,aAAC6B,SAAD,QAAgBT,CAAAA,QAAQ,CAAGS,SAA3B,EAAT,gBADF,cAEE,oBAAC,UAAD,EAAY,KAAK,CAAEV,KAAnB,EAFF,cAGE,2BAAK,SAAS,CAAC,EAAf,eACE,oBAAC,YAAD,EAAc,KAAK,CAAEA,KAArB,EADF,cAEE,8BAAQ,SAAS,CAAC,YAAlB,CAA+B,OAAO,CAAES,UAAxC,UAFF,CAHF,CAJF,CADF,CAiBD,CAlCD,CAoCA,cAAeV,CAAAA,SAAf","sourcesContent":["import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport EditTicket from \"./addData/EditTicket\";\r\nimport DeleteTicket from \"./addData/DeleteTicket\";\r\n\r\nconst customStyles = {\r\n  overlay: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: \"rgba(44, 47, 51, 0.75)\",\r\n  },\r\n  content: {\r\n    paddingLeft: \"75px\",\r\n    paddingRight: \"75px\",\r\n    paddingBottom: \"50px\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    background: \"var(--dark)\",\r\n  },\r\n};\r\n\r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement(document.getElementById(\"root\"));\r\n\r\nconst ModalEdit = (props) => {\r\n  var subtitle;\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n  // console.log(props);\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function afterOpenModal() {\r\n    // references are now sync'd and can be accessed.\r\n    subtitle.style.color = \"#f00\";\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"editButton\" onClick={openModal}>\r\n        edit\r\n      </button>\r\n      <Modal isOpen={modalIsOpen} onAfterOpen={afterOpenModal} onRequestClose={closeModal} style={customStyles} contentLabel=\"Example Modal\">\r\n        <h2 ref={(_subtitle) => (subtitle = _subtitle)}>edit/delete</h2>\r\n        <EditTicket value={props} />\r\n        <div className=\"\">\r\n          <DeleteTicket value={props} />\r\n          <button className=\"closeModal\" onClick={closeModal}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalEdit;\r\n"]},"metadata":{},"sourceType":"module"}