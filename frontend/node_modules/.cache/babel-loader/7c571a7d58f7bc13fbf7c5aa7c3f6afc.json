{"ast":null,"code":"var _jsxFileName = \"C:\\\\coding\\\\tonysgrotto\\\\src\\\\contexts\\\\BacklogContext.js\";\nimport React, { useState, createContext } from \"react\";\nexport const TicketContext = createContext();\nexport const TicketProvider = props => {\n  const [tickets, setTickets] = useState([{\n    name: \"conceptualize billions of dollars app\",\n    status: \"backlog\"\n  }, {\n    name: \"GPA Calculator\",\n    status: \"backlog\"\n  }, {\n    name: \"Authentication/Authorization\",\n    status: \"backlog\"\n  }, {\n    name: \"real-time chat channel\",\n    status: \"backlog\"\n  }, {\n    name: \"dark mode/light mode\",\n    status: \"backlog\"\n  }, {\n    name: \"users online feature\",\n    status: \"backlog\"\n  }, {\n    name: \"implement Golang, rethinkDB\",\n    status: \"backlog\"\n  }, {\n    name: \"upload pictures gallery\",\n    status: \"backlog\"\n  }, {\n    name: \"randomized uploaded image slideshow\",\n    status: \"backlog\"\n  }, {\n    name: \"overwatch hero counters\",\n    status: \"backlog\"\n  }, {\n    name: \"video game APIs\",\n    status: \"backlog\"\n  }, {\n    name: \"twitch api\",\n    status: \"backlog\"\n  }, {\n    name: \"reddit api\",\n    status: \"backlog\"\n  }, {\n    name: \"runescape font css\",\n    status: \"backlog\"\n  }, {\n    name: \"visual represntations of react concepts\",\n    status: \"backlog\"\n  }, {\n    name: \"corona virus API\",\n    status: \"backlog\"\n  }, {\n    name: \"ski highlights\",\n    status: \"backlog\"\n  }, {\n    name: \"Navigation Bar\",\n    status: \"sprint\"\n  }, {\n    name: \"GitHub Link\",\n    status: \"sprint\"\n  }, {\n    name: \"bug tracker\",\n    status: \"progress\"\n  }, {\n    name: \"React App initialized\",\n    status: \"done\"\n  }]);\n  return /*#__PURE__*/React.createElement(TicketContext.Provider, {\n    value: [tickets, setTickets],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 10\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["C:/coding/tonysgrotto/src/contexts/BacklogContext.js"],"names":["React","useState","createContext","TicketContext","TicketProvider","props","tickets","setTickets","name","status","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,aAAa,GAAGD,aAAa,EAAnC;AAEP,OAAO,MAAME,cAAc,GAAIC,KAAD,IAAW;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CACrC;AACEO,IAAAA,IAAI,EAAE,uCADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GADqC,EAKrC;AACED,IAAAA,IAAI,EAAE,gBADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GALqC,EASrC;AACED,IAAAA,IAAI,EAAE,8BADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GATqC,EAarC;AACED,IAAAA,IAAI,EAAE,wBADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAbqC,EAiBrC;AACED,IAAAA,IAAI,EAAE,sBADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAjBqC,EAqBrC;AACED,IAAAA,IAAI,EAAE,sBADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GArBqC,EAyBrC;AACED,IAAAA,IAAI,EAAE,6BADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAzBqC,EA6BrC;AACED,IAAAA,IAAI,EAAE,yBADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GA7BqC,EAiCrC;AACED,IAAAA,IAAI,EAAE,qCADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAjCqC,EAqCrC;AACED,IAAAA,IAAI,EAAE,yBADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GArCqC,EAyCrC;AACED,IAAAA,IAAI,EAAE,iBADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAzCqC,EA6CrC;AACED,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GA7CqC,EAiDrC;AACED,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAjDqC,EAqDrC;AACED,IAAAA,IAAI,EAAE,oBADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GArDqC,EAyDrC;AACED,IAAAA,IAAI,EAAE,yCADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAzDqC,EA6DrC;AACED,IAAAA,IAAI,EAAE,kBADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GA7DqC,EAiErC;AACED,IAAAA,IAAI,EAAE,gBADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAjEqC,EAqErC;AACED,IAAAA,IAAI,EAAE,gBADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GArEqC,EAyErC;AACED,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAzEqC,EA6ErC;AACED,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GA7EqC,EAiFrC;AACED,IAAAA,IAAI,EAAE,uBADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAjFqC,CAAD,CAAtC;AAsFA,sBAAO,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,CAACH,OAAD,EAAUC,UAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuDF,KAAK,CAACK,QAA7D,CAAP;AACD,CAxFM","sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\nexport const TicketContext = createContext();\r\n\r\nexport const TicketProvider = (props) => {\r\n  const [tickets, setTickets] = useState([\r\n    {\r\n      name: \"conceptualize billions of dollars app\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"GPA Calculator\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"Authentication/Authorization\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"real-time chat channel\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"dark mode/light mode\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"users online feature\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"implement Golang, rethinkDB\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"upload pictures gallery\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"randomized uploaded image slideshow\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"overwatch hero counters\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"video game APIs\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"twitch api\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"reddit api\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"runescape font css\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"visual represntations of react concepts\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"corona virus API\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"ski highlights\",\r\n      status: \"backlog\",\r\n    },\r\n    {\r\n      name: \"Navigation Bar\",\r\n      status: \"sprint\",\r\n    },\r\n    {\r\n      name: \"GitHub Link\",\r\n      status: \"sprint\",\r\n    },\r\n    {\r\n      name: \"bug tracker\",\r\n      status: \"progress\",\r\n    },\r\n    {\r\n      name: \"React App initialized\",\r\n      status: \"done\",\r\n    },\r\n  ]);\r\n  return <TicketContext.Provider value={[tickets, setTickets]}>{props.children}</TicketContext.Provider>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}