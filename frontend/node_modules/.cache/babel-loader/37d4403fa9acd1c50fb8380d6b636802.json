{"ast":null,"code":"var _jsxFileName = \"c:\\\\coding\\\\tonysgrotto\\\\src\\\\contexts\\\\TicketContext.js\";\nimport React, { useState, createContext, useEffect } from \"react\";\nimport axios from \"axios\";\nexport const TicketContext = createContext();\nexport const TicketProvider = props => {\n  const [tickets, setTickets] = useState([]);\n  useEffect(() => {\n    if (tickets.length) return; // so, we call just once\n\n    getTickets();\n  }, []);\n\n  const getTickets = async () => {\n    const response = await axios.get(\"http://localhost:8080/tickets/\");\n    setTickets(response.data);\n  };\n\n  return /*#__PURE__*/React.createElement(TicketContext.Provider, {\n    value: [tickets, setTickets],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["c:/coding/tonysgrotto/src/contexts/TicketContext.js"],"names":["React","useState","createContext","useEffect","axios","TicketContext","TicketProvider","props","tickets","setTickets","length","getTickets","response","get","data","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGH,aAAa,EAAnC;AAEP,OAAO,MAAMI,cAAc,GAAIC,KAAD,IAAW;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,OAAO,CAACE,MAAZ,EAAoB,OADN,CACc;;AAC5BC,IAAAA,UAAU;AACX,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,UAAU,GAAG,YAAY;AAC7B,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,gCAAV,CAAvB;AACAJ,IAAAA,UAAU,CAACG,QAAQ,CAACE,IAAV,CAAV;AACD,GAHD;;AAIA,sBAAO,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,CAACN,OAAD,EAAUC,UAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuDF,KAAK,CAACQ,QAA7D,CAAP;AACD,CAZM","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const TicketContext = createContext();\r\n\r\nexport const TicketProvider = (props) => {\r\n  const [tickets, setTickets] = useState([]);\r\n  useEffect(() => {\r\n    if (tickets.length) return; // so, we call just once\r\n    getTickets();\r\n  }, []);\r\n\r\n  const getTickets = async () => {\r\n    const response = await axios.get(\"http://localhost:8080/tickets/\");\r\n    setTickets(response.data);\r\n  };\r\n  return <TicketContext.Provider value={[tickets, setTickets]}>{props.children}</TicketContext.Provider>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}