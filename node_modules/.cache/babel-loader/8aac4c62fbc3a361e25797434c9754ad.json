{"ast":null,"code":"var _jsxFileName = \"C:\\\\coding\\\\tonysgrotto\\\\src\\\\ModalEdit.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Modal from \"react-modal\";\nimport EditTicket from \"./addData/EditTicket\";\nimport DeleteTicket from \"./addData/DeleteTicket\";\nimport { TicketContext } from \"./contexts/TicketContext\";\nimport { useContext, useState } from \"react\";\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n}; // Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\n\nModal.setAppElement(document.getElementById(\"root\"));\n\nconst ModalEdit = props => {\n  const [tickets, setTickets] = useContext(TicketContext);\n  var subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false); // console.log(props);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#f00\";\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"editButton\",\n    onClick: openModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"edit/delete\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    onAfterOpen: afterOpenModal,\n    onRequestClose: closeModal,\n    style: customStyles,\n    contentLabel: \"Example Modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    ref: _subtitle => subtitle = _subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"edit/delete\"), /*#__PURE__*/React.createElement(EditTicket, {\n    value: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DeleteTicket, {\n    value: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"closeModal\",\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"close\")));\n};\n\nexport default ModalEdit;","map":{"version":3,"sources":["C:/coding/tonysgrotto/src/ModalEdit.js"],"names":["React","ReactDOM","Modal","EditTicket","DeleteTicket","TicketContext","useContext","useState","customStyles","content","top","left","right","bottom","marginRight","transform","setAppElement","document","getElementById","ModalEdit","props","tickets","setTickets","subtitle","modalIsOpen","setIsOpen","openModal","afterOpenModal","style","color","closeModal","_subtitle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE,KADE;AAEPC,IAAAA,IAAI,EAAE,KAFC;AAGPC,IAAAA,KAAK,EAAE,MAHA;AAIPC,IAAAA,MAAM,EAAE,MAJD;AAKPC,IAAAA,WAAW,EAAE,MALN;AAMPC,IAAAA,SAAS,EAAE;AANJ;AADU,CAArB,C,CAWA;;AACAb,KAAK,CAACc,aAAN,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,UAAU,CAACD,aAAD,CAAxC;AACA,MAAIkB,QAAJ;AACA,QAAM,CAACC,WAAD,EAAcC,SAAd,IAA2BzB,KAAK,CAACO,QAAN,CAAe,KAAf,CAAjC,CAH2B,CAI3B;;AACA,WAASmB,SAAT,GAAqB;AACnBD,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,WAASE,cAAT,GAA0B;AACxB;AACAJ,IAAAA,QAAQ,CAACK,KAAT,CAAeC,KAAf,GAAuB,MAAvB;AACD;;AAED,WAASC,UAAT,GAAsB;AACpBL,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAEC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEF,WAAf;AAA4B,IAAA,WAAW,EAAEG,cAAzC;AAAyD,IAAA,cAAc,EAAEG,UAAzE;AAAqF,IAAA,KAAK,EAAEtB,YAA5F;AAA0G,IAAA,YAAY,EAAC,eAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,GAAG,EAAGuB,SAAD,IAAgBR,QAAQ,GAAGQ,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEX,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAEU,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAJF,CADF;AAeD,CAjCD;;AAmCA,eAAeX,SAAf","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Modal from \"react-modal\";\r\nimport EditTicket from \"./addData/EditTicket\";\r\nimport DeleteTicket from \"./addData/DeleteTicket\";\r\nimport { TicketContext } from \"./contexts/TicketContext\";\r\nimport { useContext, useState } from \"react\";\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement(document.getElementById(\"root\"));\r\n\r\nconst ModalEdit = (props) => {\r\n  const [tickets, setTickets] = useContext(TicketContext);\r\n  var subtitle;\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n  // console.log(props);\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function afterOpenModal() {\r\n    // references are now sync'd and can be accessed.\r\n    subtitle.style.color = \"#f00\";\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"editButton\" onClick={openModal}>\r\n        edit/delete\r\n      </button>\r\n      <Modal isOpen={modalIsOpen} onAfterOpen={afterOpenModal} onRequestClose={closeModal} style={customStyles} contentLabel=\"Example Modal\">\r\n        <h2 ref={(_subtitle) => (subtitle = _subtitle)}>edit/delete</h2>\r\n        <EditTicket value={props} />\r\n        <DeleteTicket value={props} />\r\n        <button className=\"closeModal\" onClick={closeModal}>\r\n          close\r\n        </button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalEdit;\r\n"]},"metadata":{},"sourceType":"module"}