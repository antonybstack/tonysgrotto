{"ast":null,"code":"var _jsxFileName = \"C:\\\\coding\\\\tonysgrotto\\\\src\\\\displays\\\\TicketDisplay.js\";\nimport React from \"react\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { TicketContext } from \"../contexts/TicketContext\";\nimport ChangeStatus from \"../addData/ChangeStatus\";\nimport Ticket from \"../Ticket\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst TicketDisplay = () => {\n  const [tickets, setTickets] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/tickets/\").then(response => {\n      console.log(response.data);\n      setTickets(response.data); // this.setState({ tickets: response.data });\n      // setTickets((currentTickets) => [...currentTickets, { name: name, status: \"backlog\", id: uuid() }]);\n      // const [tickets, setTickets] = useState(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []); // const ticketList = () => {\n  //   return <div>{tickets.map((ticket, index) => ());}</div>\n  // };\n\n  const ticketList = () => {\n    //state management w/ context\n    console.log(\"dfgdfhgzdlokfgdkofmjg\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, tickets.map((currentTicket, i) => /*#__PURE__*/React.createElement(Ticket, {\n      ticket: currentTicket,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    })), \"hi\");\n  };\n\n  return ticketList(); // <div className=\"display\">\n  //   <div className=\"backlog\">\n  //     <h1>Backlog</h1>\n  //     {tickets.map((ticket, index) => (\n  //       <div key={ticket.id}>\n  //         {ticket.status === \"backlog\" && (\n  //           <div className=\"ticketBlock\">\n  //             <button\n  //               onClick={(e) => {\n  //                 const newTickets = tickets.slice();\n  //                 newTickets.splice(index, 1, {\n  //                   ...ticket,\n  //                   status: \"sprint\",\n  //                 });\n  //                 setTickets(newTickets);\n  //               }}\n  //             >\n  //               push\n  //             </button>\n  //             &nbsp;\n  //             <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\n  //           </div>\n  //         )}\n  //       </div>\n  //     ))}\n  //   </div>\n  //   <div className=\"sprint\">\n  //     <h1>Sprint</h1>\n  //     <div>\n  //       {tickets.map((ticket, index) => (\n  //         <div key={ticket.id}>\n  //           {ticket.status === \"sprint\" && (\n  //             <div className=\"ticketBlock\">\n  //               <button\n  //                 onClick={(e) => {\n  //                   const newTickets = tickets.slice();\n  //                   newTickets.splice(index, 1, {\n  //                     ...ticket,\n  //                     status: \"progress\",\n  //                   });\n  //                   setTickets(newTickets);\n  //                 }}\n  //               >\n  //                 push\n  //               </button>\n  //               &nbsp;\n  //               <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\n  //             </div>\n  //           )}\n  //         </div>\n  //       ))}\n  //     </div>\n  //   </div>\n  //   <div className=\"progress\">\n  //     <h1>Progress</h1>\n  //     <div>\n  //       {tickets.map((ticket, index) => (\n  //         <div key={ticket.id}>\n  //           {ticket.status === \"progress\" && (\n  //             <div className=\"ticketBlock\">\n  //               <button\n  //                 onClick={(e) => {\n  //                   const newTickets = tickets.slice();\n  //                   newTickets.splice(index, 1, {\n  //                     ...ticket,\n  //                     status: \"done\",\n  //                   });\n  //                   setTickets(newTickets);\n  //                 }}\n  //               >\n  //                 push\n  //               </button>\n  //               &nbsp;\n  //               <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\n  //             </div>\n  //           )}\n  //         </div>\n  //       ))}\n  //     </div>\n  //   </div>\n  //   <div className=\"done\">\n  //     <h1>Done</h1>\n  //     <div>\n  //       {tickets.map((ticket, index) => (\n  //         <div key={ticket.id}>\n  //           {ticket.status === \"done\" && (\n  //             <div className=\"ticketBlock\">\n  //               <button\n  //                 onClick={(e) => {\n  //                   const newTickets = tickets.slice();\n  //                   newTickets.splice(index, 1, {\n  //                     ...ticket,\n  //                     status: \"backlog\",\n  //                   });\n  //                   setTickets(newTickets);\n  //                 }}\n  //               >\n  //                 push\n  //               </button>\n  //               &nbsp;\n  //               <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\n  //             </div>\n  //           )}\n  //         </div>\n  //       ))}\n  //     </div>\n  //   </div>\n  // </div>\n};\n\nexport default TicketDisplay;","map":{"version":3,"sources":["C:/coding/tonysgrotto/src/displays/TicketDisplay.js"],"names":["React","useContext","useState","useEffect","TicketContext","ChangeStatus","Ticket","Link","axios","TicketDisplay","tickets","setTickets","get","then","response","console","log","data","catch","error","ticketList","map","currentTicket","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CACFI,GADH,CACO,gCADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAN,MAAAA,UAAU,CAACG,QAAQ,CAACG,IAAV,CAAV,CAFkB,CAGlB;AACA;AACA;AACD,KARH,EASGC,KATH,CASS,UAAUC,KAAV,EAAiB;AACtBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,KAXH;AAYD,GAbQ,EAaN,EAbM,CAAT,CAH0B,CAkB1B;AACA;AACA;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,OAAO,CAACW,GAAR,CAAY,CAACC,aAAD,EAAgBC,CAAhB,kBACX,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAED,aAAhB;AAA+B,MAAA,GAAG,EAAEC,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,OADF;AAQD,GAXD;;AAaA,SAAOH,UAAU,EAAjB,CAnC0B,CAojJD;;AAmJA,eAAeX,aAAf","sourcesContent":["import React from \"react\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport { TicketContext } from \"../contexts/TicketContext\";\r\nimport ChangeStatus from \"../addData/ChangeStatus\";\r\nimport Ticket from \"../Ticket\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst TicketDisplay = () => {\r\n  const [tickets, setTickets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:4000/tickets/\")\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setTickets(response.data);\r\n        // this.setState({ tickets: response.data });\r\n        // setTickets((currentTickets) => [...currentTickets, { name: name, status: \"backlog\", id: uuid() }]);\r\n        // const [tickets, setTickets] = useState(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // const ticketList = () => {\r\n  //   return <div>{tickets.map((ticket, index) => ());}</div>\r\n  // };\r\n\r\n  const ticketList = () => {\r\n    //state management w/ context\r\n    console.log(\"dfgdfhgzdlokfgdkofmjg\");\r\n    return (\r\n      <div>\r\n        {tickets.map((currentTicket, i) => (\r\n          <Ticket ticket={currentTicket} key={i} />\r\n        ))}\r\n        hi\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return ticketList();\r\n  // <div className=\"display\">\r\n  //   <div className=\"backlog\">\r\n  //     <h1>Backlog</h1>\r\n  //     {tickets.map((ticket, index) => (\r\n  //       <div key={ticket.id}>\r\n  //         {ticket.status === \"backlog\" && (\r\n  //           <div className=\"ticketBlock\">\r\n  //             <button\r\n  //               onClick={(e) => {\r\n  //                 const newTickets = tickets.slice();\r\n  //                 newTickets.splice(index, 1, {\r\n  //                   ...ticket,\r\n  //                   status: \"sprint\",\r\n  //                 });\r\n  //                 setTickets(newTickets);\r\n  //               }}\r\n  //             >\r\n  //               push\r\n  //             </button>\r\n  //             &nbsp;\r\n  //             <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\r\n  //           </div>\r\n  //         )}\r\n  //       </div>\r\n  //     ))}\r\n  //   </div>\r\n\r\n  //   <div className=\"sprint\">\r\n  //     <h1>Sprint</h1>\r\n  //     <div>\r\n  //       {tickets.map((ticket, index) => (\r\n  //         <div key={ticket.id}>\r\n  //           {ticket.status === \"sprint\" && (\r\n  //             <div className=\"ticketBlock\">\r\n  //               <button\r\n  //                 onClick={(e) => {\r\n  //                   const newTickets = tickets.slice();\r\n  //                   newTickets.splice(index, 1, {\r\n  //                     ...ticket,\r\n  //                     status: \"progress\",\r\n  //                   });\r\n  //                   setTickets(newTickets);\r\n  //                 }}\r\n  //               >\r\n  //                 push\r\n  //               </button>\r\n  //               &nbsp;\r\n  //               <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\r\n  //             </div>\r\n  //           )}\r\n  //         </div>\r\n  //       ))}\r\n  //     </div>\r\n  //   </div>\r\n  //   <div className=\"progress\">\r\n  //     <h1>Progress</h1>\r\n  //     <div>\r\n  //       {tickets.map((ticket, index) => (\r\n  //         <div key={ticket.id}>\r\n  //           {ticket.status === \"progress\" && (\r\n  //             <div className=\"ticketBlock\">\r\n  //               <button\r\n  //                 onClick={(e) => {\r\n  //                   const newTickets = tickets.slice();\r\n  //                   newTickets.splice(index, 1, {\r\n  //                     ...ticket,\r\n  //                     status: \"done\",\r\n  //                   });\r\n  //                   setTickets(newTickets);\r\n  //                 }}\r\n  //               >\r\n  //                 push\r\n  //               </button>\r\n  //               &nbsp;\r\n  //               <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\r\n  //             </div>\r\n  //           )}\r\n  //         </div>\r\n  //       ))}\r\n  //     </div>\r\n  //   </div>\r\n  //   <div className=\"done\">\r\n  //     <h1>Done</h1>\r\n  //     <div>\r\n  //       {tickets.map((ticket, index) => (\r\n  //         <div key={ticket.id}>\r\n  //           {ticket.status === \"done\" && (\r\n  //             <div className=\"ticketBlock\">\r\n  //               <button\r\n  //                 onClick={(e) => {\r\n  //                   const newTickets = tickets.slice();\r\n  //                   newTickets.splice(index, 1, {\r\n  //                     ...ticket,\r\n  //                     status: \"backlog\",\r\n  //                   });\r\n  //                   setTickets(newTickets);\r\n  //                 }}\r\n  //               >\r\n  //                 push\r\n  //               </button>\r\n  //               &nbsp;\r\n  //               <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\r\n  //             </div>\r\n  //           )}\r\n  //         </div>\r\n  //       ))}\r\n  //     </div>\r\n  //   </div>\r\n  // </div>\r\n};\r\n\r\nexport default TicketDisplay;\r\n"]},"metadata":{},"sourceType":"module"}