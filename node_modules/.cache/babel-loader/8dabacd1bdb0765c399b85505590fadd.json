{"ast":null,"code":"var _jsxFileName = \"C:\\\\coding\\\\tonysgrotto\\\\src\\\\displays\\\\TicketDisplay.js\";\nimport React from \"react\";\nimport { useContext, useState } from \"react\";\nimport { TicketContext } from \"../contexts/TicketContext\";\nimport ChangeStatus from \"../addData/ChangeStatus\";\nimport Ticket from \"../Ticket\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst TicketDisplay = () => {\n  const [tickets, setTickets] = useState(\"\");\n  console.log(tickets);\n  axios.get(\"http://localhost:4000/tickets/\").then(response => {\n    console.log(response.data); // this.setState({ tickets: response.data });\n    // setTickets((currentTickets) => [...currentTickets, { name: name, status: \"backlog\", id: uuid() }]);\n    // const [tickets, setTickets] = useState(response.data);\n  }).catch(function (error) {\n    console.log(error);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"backlog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Backlog\"), tickets.map((ticket, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: ticket.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, ticket.status === \"backlog\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ticketBlock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      const newTickets = tickets.slice();\n      newTickets.splice(index, 1, { ...ticket,\n        status: \"sprint\"\n      });\n      setTickets(newTickets);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"push\"), \"\\xA0\", /*#__PURE__*/React.createElement(Ticket, {\n    name: ticket.name,\n    status: ticket.status,\n    key: ticket.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sprint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Sprint\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, tickets.map((ticket, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: ticket.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, ticket.status === \"sprint\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ticketBlock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      const newTickets = tickets.slice();\n      newTickets.splice(index, 1, { ...ticket,\n        status: \"progress\"\n      });\n      setTickets(newTickets);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, \"push\"), \"\\xA0\", /*#__PURE__*/React.createElement(Ticket, {\n    name: ticket.name,\n    status: ticket.status,\n    key: ticket.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Progress\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, tickets.map((ticket, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: ticket.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, ticket.status === \"progress\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ticketBlock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      const newTickets = tickets.slice();\n      newTickets.splice(index, 1, { ...ticket,\n        status: \"done\"\n      });\n      setTickets(newTickets);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, \"push\"), \"\\xA0\", /*#__PURE__*/React.createElement(Ticket, {\n    name: ticket.name,\n    status: ticket.status,\n    key: ticket.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Done\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, tickets.map((ticket, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: ticket.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, ticket.status === \"done\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ticketBlock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      const newTickets = tickets.slice();\n      newTickets.splice(index, 1, { ...ticket,\n        status: \"backlog\"\n      });\n      setTickets(newTickets);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, \"push\"), \"\\xA0\", /*#__PURE__*/React.createElement(Ticket, {\n    name: ticket.name,\n    status: ticket.status,\n    key: ticket.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  })))))));\n};\n\nexport default TicketDisplay;","map":{"version":3,"sources":["C:/coding/tonysgrotto/src/displays/TicketDisplay.js"],"names":["React","useContext","useState","TicketContext","ChangeStatus","Ticket","Link","axios","TicketDisplay","tickets","setTickets","console","log","get","then","response","data","catch","error","map","ticket","index","id","status","e","newTickets","slice","splice","name"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useContext, useState } from \"react\";\r\nimport { TicketContext } from \"../contexts/TicketContext\";\r\nimport ChangeStatus from \"../addData/ChangeStatus\";\r\nimport Ticket from \"../Ticket\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst TicketDisplay = () => {\r\n  const [tickets, setTickets] = useState(\"\");\r\n  console.log(tickets);\r\n\r\n  axios\r\n    .get(\"http://localhost:4000/tickets/\")\r\n    .then((response) => {\r\n      console.log(response.data);\r\n      // this.setState({ tickets: response.data });\r\n      // setTickets((currentTickets) => [...currentTickets, { name: name, status: \"backlog\", id: uuid() }]);\r\n      // const [tickets, setTickets] = useState(response.data);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n\r\n  return (\r\n    <div className=\"display\">\r\n      <div className=\"backlog\">\r\n        <h1>Backlog</h1>\r\n        {tickets.map((ticket, index) => (\r\n          <div key={ticket.id}>\r\n            {ticket.status === \"backlog\" && (\r\n              <div className=\"ticketBlock\">\r\n                <button\r\n                  onClick={(e) => {\r\n                    const newTickets = tickets.slice();\r\n                    newTickets.splice(index, 1, {\r\n                      ...ticket,\r\n                      status: \"sprint\",\r\n                    });\r\n                    setTickets(newTickets);\r\n                  }}\r\n                >\r\n                  push\r\n                </button>\r\n                &nbsp;\r\n                <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"sprint\">\r\n        <h1>Sprint</h1>\r\n        <div>\r\n          {tickets.map((ticket, index) => (\r\n            <div key={ticket.id}>\r\n              {ticket.status === \"sprint\" && (\r\n                <div className=\"ticketBlock\">\r\n                  <button\r\n                    onClick={(e) => {\r\n                      const newTickets = tickets.slice();\r\n                      newTickets.splice(index, 1, {\r\n                        ...ticket,\r\n                        status: \"progress\",\r\n                      });\r\n                      setTickets(newTickets);\r\n                    }}\r\n                  >\r\n                    push\r\n                  </button>\r\n                  &nbsp;\r\n                  <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"progress\">\r\n        <h1>Progress</h1>\r\n        <div>\r\n          {tickets.map((ticket, index) => (\r\n            <div key={ticket.id}>\r\n              {ticket.status === \"progress\" && (\r\n                <div className=\"ticketBlock\">\r\n                  <button\r\n                    onClick={(e) => {\r\n                      const newTickets = tickets.slice();\r\n                      newTickets.splice(index, 1, {\r\n                        ...ticket,\r\n                        status: \"done\",\r\n                      });\r\n                      setTickets(newTickets);\r\n                    }}\r\n                  >\r\n                    push\r\n                  </button>\r\n                  &nbsp;\r\n                  <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"done\">\r\n        <h1>Done</h1>\r\n        <div>\r\n          {tickets.map((ticket, index) => (\r\n            <div key={ticket.id}>\r\n              {ticket.status === \"done\" && (\r\n                <div className=\"ticketBlock\">\r\n                  <button\r\n                    onClick={(e) => {\r\n                      const newTickets = tickets.slice();\r\n                      newTickets.splice(index, 1, {\r\n                        ...ticket,\r\n                        status: \"backlog\",\r\n                      });\r\n                      setTickets(newTickets);\r\n                    }}\r\n                  >\r\n                    push\r\n                  </button>\r\n                  &nbsp;\r\n                  <Ticket name={ticket.name} status={ticket.status} key={ticket.id} />\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TicketDisplay;\r\n"]},"metadata":{},"sourceType":"module"}